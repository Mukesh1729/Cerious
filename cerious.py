# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Cerious2.ui'
#
# Created: Mon Nov 14 11:47:38 2016
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(664, 423)
        MainWindow.setStyleSheet(_fromUtf8("background-color: rgb(37, 112, 120);"))
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.gridLayout_2 = QtGui.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))

	# Start Button
        self.start = QtGui.QPushButton(self.centralwidget)
        self.start.setMouseTracking(True)
        self.start.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8("icons/play.jpeg")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.start.setIcon(icon)
        self.start.setAutoDefault(False)
        self.start.setDefault(False)
        self.start.setFlat(False)
        self.start.setObjectName(_fromUtf8("start"))
        self.gridLayout_2.addWidget(self.start, 0, 0, 1, 1)

	# Pause Button
        self.pause = QtGui.QPushButton(self.centralwidget)
        self.pause.setMouseTracking(True)
        self.pause.setText(_fromUtf8(""))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8("icons/pause.jpeg")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pause.setIcon(icon1)
        self.pause.setAutoDefault(False)
        self.pause.setFlat(False)
        self.pause.setObjectName(_fromUtf8("pause"))
        self.gridLayout_2.addWidget(self.pause, 0, 1, 1, 1)
        self.gridLayout = QtGui.QGridLayout()
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))

	# OutputBox Field
        self.outputBox = QtGui.QTextEdit(self.centralwidget)
        self.outputBox.setStyleSheet(_fromUtf8("background-color: rgb(255,255,255);\n"
"border-radius: 10px;"))
        self.outputBox.setObjectName(_fromUtf8("outputBox"))
        self.gridLayout.addWidget(self.outputBox, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 2, 4, 1)
        self.horizontalLayout_3 = QtGui.QHBoxLayout()
        self.horizontalLayout_3.setObjectName(_fromUtf8("horizontalLayout_3"))

	# Undo Button
        self.undo_h = QtGui.QPushButton(self.centralwidget)
        self.undo_h.setText(_fromUtf8(""))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8("icons/undo.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.undo_h.setIcon(icon2)
        self.undo_h.setObjectName(_fromUtf8("undo_h"))
        self.horizontalLayout_3.addWidget(self.undo_h)

	# Redo Button
        self.redo_h = QtGui.QPushButton(self.centralwidget)
        self.redo_h.setText(_fromUtf8(""))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8("icons/redo.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.redo_h.setIcon(icon3)
        self.redo_h.setObjectName(_fromUtf8("redo_h"))
        self.horizontalLayout_3.addWidget(self.redo_h)

	# Phone Button 
        self.phone = QtGui.QPushButton(self.centralwidget)
        self.phone.setText(_fromUtf8(""))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8("icons/images.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.phone.setIcon(icon4)
        self.phone.setObjectName(_fromUtf8("phone"))
        self.horizontalLayout_3.addWidget(self.phone)

	# Tutorial Button
        self.tutorial = QtGui.QPushButton(self.centralwidget)
        self.tutorial.setObjectName(_fromUtf8("tutorial"))
        self.horizontalLayout_3.addWidget(self.tutorial)
        self.gridLayout_2.addLayout(self.horizontalLayout_3, 2, 0, 1, 2)

	# TutorialBox field
        self.tutorialBox = QtGui.QTextEdit(self.centralwidget)
        self.tutorialBox.setStyleSheet(_fromUtf8("background-color: rgba(255,255,255);\n"
"border-radius: 10px;"))
        self.tutorialBox.setReadOnly(True)
        self.tutorialBox.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.tutorialBox.setObjectName(_fromUtf8("tutorialBox"))
        self.gridLayout_2.addWidget(self.tutorialBox, 3, 0, 1, 2)

	# Input User Speech Box Field
        self.inputBox = QtGui.QTextEdit(self.centralwidget)
        self.inputBox.setStyleSheet(_fromUtf8("background-color: rgb(255,255,255);\n"
"border-radius: 10px;"))
        self.inputBox.setObjectName(_fromUtf8("inputBox"))
        self.gridLayout_2.addWidget(self.inputBox, 1, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)

	# MenuBar
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 664, 25))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuFile = QtGui.QMenu(self.menubar)
        self.menuFile.setObjectName(_fromUtf8("menuFile"))
        self.menuEdit = QtGui.QMenu(self.menubar)
        self.menuEdit.setObjectName(_fromUtf8("menuEdit"))
        self.menuView = QtGui.QMenu(self.menubar)
        self.menuView.setObjectName(_fromUtf8("menuView"))
        self.menuFind = QtGui.QMenu(self.menubar)
        self.menuFind.setObjectName(_fromUtf8("menuFind"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        MainWindow.setMenuBar(self.menubar)

	# StatusBar
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)

	# ToolBar
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)

	# Help Menu
	# About Action
        self.about = QtGui.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8("icons/about.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.about.setIcon(icon5)
        self.about.setIconVisibleInMenu(True)
        self.about.setObjectName(_fromUtf8("about"))

	# Help Action
        self.help = QtGui.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8("icons/help.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.help.setIcon(icon6)
        self.help.setIconVisibleInMenu(True)
        self.help.setObjectName(_fromUtf8("help"))

	# File Menu
	# Open Action
        self.open = QtGui.QAction(MainWindow)
        self.open.setObjectName(_fromUtf8("open"))
        self.actionSave = QtGui.QAction(MainWindow)
        self.actionSave.setObjectName(_fromUtf8("actionSave"))
        self.actionPrint = QtGui.QAction(MainWindow)
        self.actionPrint.setObjectName(_fromUtf8("actionPrint"))
        self.actionPage_View = QtGui.QAction(MainWindow)
        self.actionPage_View.setObjectName(_fromUtf8("actionPage_View"))
        self.actionQuit = QtGui.QAction(MainWindow)
        self.actionQuit.setObjectName(_fromUtf8("actionQuit"))
        self.undo = QtGui.QAction(MainWindow)
        self.undo.setIcon(icon2)
        self.undo.setIconVisibleInMenu(True)
        self.undo.setObjectName(_fromUtf8("undo"))
        self.redo = QtGui.QAction(MainWindow)
        self.redo.setIcon(icon3)
        self.redo.setIconVisibleInMenu(True)
        self.redo.setObjectName(_fromUtf8("redo"))
        self.cut = QtGui.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8("icons/cut.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.cut.setIcon(icon7)
        self.cut.setIconVisibleInMenu(True)
        self.cut.setObjectName(_fromUtf8("cut"))
        self.actionPaste = QtGui.QAction(MainWindow)
        self.actionPaste.setObjectName(_fromUtf8("actionPaste"))
        self.copy = QtGui.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8("icons/copy.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.copy.setIcon(icon8)
        self.copy.setIconVisibleInMenu(True)
        self.copy.setObjectName(_fromUtf8("copy"))
        self.full_screen = QtGui.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8("icons/Full_Screen.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.full_screen.setIcon(icon9)
        self.full_screen.setIconVisibleInMenu(True)
        self.full_screen.setObjectName(_fromUtf8("full_screen"))
        self.show_toolbar = QtGui.QAction(MainWindow)
        self.show_toolbar.setObjectName(_fromUtf8("show_toolbar"))
        self.search = QtGui.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(_fromUtf8("icons/search.jpg")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.search.setIcon(icon10)
        self.search.setIconVisibleInMenu(True)
        self.search.setObjectName(_fromUtf8("search"))
        self.find_replace = QtGui.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(_fromUtf8("icons/find_replace.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.find_replace.setIcon(icon11)
        self.find_replace.setIconVisibleInMenu(True)
        self.find_replace.setObjectName(_fromUtf8("find_replace"))
        self.new_3 = QtGui.QAction(MainWindow)
        self.new_3.setObjectName(_fromUtf8("new_3"))
        self.new_ = QtGui.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(_fromUtf8("icons/new.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.new_.setIcon(icon12)
        self.new_.setIconVisibleInMenu(True)
        self.new_.setObjectName(_fromUtf8("new_"))
        self.open_ = QtGui.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(_fromUtf8("icons/open.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.open_.setIcon(icon13)
        self.open_.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.open_.setIconVisibleInMenu(True)
        self.open_.setObjectName(_fromUtf8("open_"))
        self.save_ = QtGui.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(_fromUtf8("icons/save.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.save_.setIcon(icon14)
        self.save_.setIconVisibleInMenu(True)
        self.save_.setObjectName(_fromUtf8("save_"))
        self.print_ = QtGui.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(_fromUtf8("icons/print.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.print_.setIcon(icon15)
        self.print_.setIconVisibleInMenu(True)
        self.print_.setObjectName(_fromUtf8("print_"))
        self.page_view = QtGui.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(_fromUtf8("icons/preview.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.page_view.setIcon(icon16)
        self.page_view.setIconVisibleInMenu(True)
        self.page_view.setObjectName(_fromUtf8("page_view"))
        self.quit_ = QtGui.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(_fromUtf8("icons/quit.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.quit_.setIcon(icon17)
        self.quit_.setIconVisibleInMenu(True)
        self.quit_.setObjectName(_fromUtf8("quit_"))
        self.paste_ = QtGui.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(_fromUtf8("icons/paste.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.paste_.setIcon(icon18)
        self.paste_.setIconVisibleInMenu(True)
        self.paste_.setObjectName(_fromUtf8("paste_"))
        self.menuFile.addAction(self.new_)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.open_)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.save_)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.print_)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.page_view)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.quit_)
        self.menuEdit.addAction(self.undo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.redo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.cut)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.copy)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.paste_)
        self.menuView.addAction(self.full_screen)
        self.menuView.addSeparator()
        self.menuView.addAction(self.show_toolbar)
        self.menuFind.addAction(self.search)
        self.menuFind.addSeparator()
        self.menuFind.addAction(self.find_replace)
        self.menuHelp.addAction(self.about)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.help)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuFind.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.new_)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.open_)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.save_)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.print_)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.page_view)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.paste_)
        self.toolBar.addAction(self.copy)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.cut)
        self.toolBar.addAction(self.undo)
        self.toolBar.addAction(self.search)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.redo)
        self.toolBar.addAction(self.find_replace)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow", None))
        self.start.setStatusTip(_translate("MainWindow", "Start ", None))
        self.pause.setStatusTip(_translate("MainWindow", "Pause the process", None))
        self.outputBox.setStatusTip(_translate("MainWindow", "Your C language Code", None))
        self.undo_h.setStatusTip(_translate("MainWindow", "Undo", None))
        self.redo_h.setStatusTip(_translate("MainWindow", "Redo", None))
        self.phone.setStatusTip(_translate("MainWindow", "Give input as speech", None))
        self.tutorial.setStatusTip(_translate("MainWindow", "Get Tutorial", None))
        self.tutorial.setText(_translate("MainWindow", "Tutorial", None))
        self.tutorialBox.setStatusTip(_translate("MainWindow", "Tutorial Area", None))
        self.inputBox.setStatusTip(_translate("MainWindow", "Speech Field", None))
        self.menuFile.setTitle(_translate("MainWindow", "File", None))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit", None))
        self.menuView.setTitle(_translate("MainWindow", "View", None))
        self.menuFind.setTitle(_translate("MainWindow", "Find", None))
        self.menuHelp.setTitle(_translate("MainWindow", "Help", None))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar", None))
        self.about.setText(_translate("MainWindow", "About", None))
        self.about.setStatusTip(_translate("MainWindow", "About softaware", None))
        self.help.setText(_translate("MainWindow", "Help", None))
        self.help.setStatusTip(_translate("MainWindow", "Help", None))
        self.open.setText(_translate("MainWindow", "Open", None))
        self.actionSave.setText(_translate("MainWindow", "Save", None))
        self.actionPrint.setText(_translate("MainWindow", "Print", None))
        self.actionPage_View.setText(_translate("MainWindow", "Page View", None))
        self.actionQuit.setText(_translate("MainWindow", "Quit", None))
        self.undo.setText(_translate("MainWindow", "Undo", None))
        self.undo.setStatusTip(_translate("MainWindow", "Undo operation", None))
        self.undo.setShortcut(_translate("MainWindow", "Ctrl+Z", None))
        self.redo.setText(_translate("MainWindow", "Redo", None))
        self.redo.setStatusTip(_translate("MainWindow", "Redo operation", None))
        self.redo.setShortcut(_translate("MainWindow", "Ctrl+Y", None))
        self.cut.setText(_translate("MainWindow", "Cut", None))
        self.cut.setStatusTip(_translate("MainWindow", "Cut file", None))
        self.cut.setShortcut(_translate("MainWindow", "Ctrl+X", None))
        self.actionPaste.setText(_translate("MainWindow", "Paste", None))
        self.copy.setText(_translate("MainWindow", "Copy", None))
        self.copy.setStatusTip(_translate("MainWindow", "Copy file ", None))
        self.copy.setShortcut(_translate("MainWindow", "Ctrl+C", None))
        self.full_screen.setText(_translate("MainWindow", "Full Screen", None))
        self.full_screen.setStatusTip(_translate("MainWindow", "Full Screen", None))
        self.show_toolbar.setText(_translate("MainWindow", "Toolbar", None))
        self.search.setText(_translate("MainWindow", "Search", None))
        self.search.setStatusTip(_translate("MainWindow", "Search in file", None))
        self.search.setShortcut(_translate("MainWindow", "Ctrl+Q", None))
        self.find_replace.setText(_translate("MainWindow", "Find and Replace", None))
        self.find_replace.setStatusTip(_translate("MainWindow", "Find and Replacein file", None))
        self.new_3.setText(_translate("MainWindow", "New", None))
        self.new_.setText(_translate("MainWindow", "New", None))
        self.new_.setStatusTip(_translate("MainWindow", "Create new file", None))
        self.new_.setShortcut(_translate("MainWindow", "Ctrl+N", None))
        self.open_.setText(_translate("MainWindow", "Open", None))
        self.open_.setStatusTip(_translate("MainWindow", "Open a file", None))
        self.open_.setShortcut(_translate("MainWindow", "Ctrl+O", None))
        self.save_.setText(_translate("MainWindow", "Save", None))
        self.save_.setStatusTip(_translate("MainWindow", "Save file", None))
        self.save_.setShortcut(_translate("MainWindow", "Ctrl+S", None))
        self.print_.setText(_translate("MainWindow", "Print", None))
        self.print_.setStatusTip(_translate("MainWindow", "Print file", None))
        self.print_.setShortcut(_translate("MainWindow", "Ctrl+P", None))
        self.page_view.setText(_translate("MainWindow", "Page view", None))
        self.page_view.setStatusTip(_translate("MainWindow", "Preview", None))
        self.page_view.setShortcut(_translate("MainWindow", "Ctrl+Shift+O", None))
        self.quit_.setText(_translate("MainWindow", "Quit", None))
        self.quit_.setStatusTip(_translate("MainWindow", "Quit", None))
        self.quit_.setShortcut(_translate("MainWindow", "Ctrl+F4", None))
        self.paste_.setText(_translate("MainWindow", "Paste", None))
        self.paste_.setStatusTip(_translate("MainWindow", "Paste file", None))
        self.paste_.setShortcut(_translate("MainWindow", "Ctrl+V", None))

    def outputText(self):
        self.inputBox.setReadOnly(True)
        str = self.inputBox.toPlainText()
        print str
    
        self.outputBox.append(str)
        self.inputBox.setText('')
        self.inputBox.setReadOnly(False)

    def showTut(self):
        tut = open('tutorial.txt').read()
        print tut
        self.tutorialBox.setText(tut)


if __name__ == "__main__":
    import sys
    app = QtGui.QApplication(sys.argv)
    MainWindow = QtGui.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    ui.phone.clicked.connect(ui.outputText)
    ui.tutorial.clicked.connect(ui.showTut)
    sys.exit(app.exec_())

